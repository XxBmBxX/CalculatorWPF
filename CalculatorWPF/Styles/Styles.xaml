<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- Fonts -->
    <FontFamily x:Key="LatoThin">pack://appliction;,,,/Fonts/#Lato Thin</FontFamily>
    <FontFamily x:Key="LatoRegular">pack://appliction;,,,/Fonts/#Lato Regular</FontFamily>
    <FontFamily x:Key="LatoBold">pack://appliction;,,,/Fonts/#Lato Bold</FontFamily>
    <FontFamily x:Key="FontAwesomeSolid">pack://appliction;,,,/Fonts/#Font Awesome 5 Free Solid</FontFamily>

    <Style TargetType="{x:Type Control}" x:Key="BaseStyle">
        <Setter Property="FontFamily" Value="{StaticResource LatoThin}" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="BaseTextBlockStyle">
        <Setter Property="FontFamily" Value="{StaticResource LatoThin}" />
    </Style>
    
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}" />
    <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource BaseStyle}" />
    
    <system:Double x:Key="FontSizeRegular">20</system:Double>
    <system:Double x:Key="FontSizeReallyLarge">60</system:Double>
    <system:Double x:Key="FontSizeSmall">14</system:Double>
    <system:Double x:Key="FontSizeLarge">30</system:Double>
    <system:Double x:Key="FontSizeCalculator">40</system:Double>
    <system:String x:Key="SettingsFontIcon">&#xf1de;</system:String>
    <system:String x:Key="SettingsFontClose">&#xf410;</system:String>
    <system:String x:Key="SaveIcon">&#xf382;</system:String>
    <system:String x:Key="MinimixeIcon">&#xf2d1;</system:String>
    <system:String x:Key="MaximizeIcon">&#xf2d0;</system:String>
    <system:String x:Key="CheckedIcon">&#xf14a;</system:String>
    <system:String x:Key="TickIcon">&#xf00c;</system:String>
    <system:String x:Key="XIcon">&#xf00d;</system:String>
    <system:String x:Key="Trophy">&#xf091;</system:String>
    <system:String x:Key="SquareRoot">&#xf698;</system:String>
    <system:String x:Key="Divide">&#xf529;</system:String>
    <system:String x:Key="BackSpace">&#xf55a;</system:String>

    
    <!--#region Colors-->
    <Color x:Key="BackgroundDark">#222323</Color>
    <SolidColorBrush x:Key="BackgroundDarkBrush" Color="{StaticResource BackgroundDark}" />

    <Color x:Key="DigitsDark">#070707</Color>
    <SolidColorBrush x:Key="DigitsDarkBrush" Color="{StaticResource DigitsDark}" />

    <Color x:Key="DigitsHover">#4b4b4b</Color>
    <SolidColorBrush x:Key="DigitsHoverBrush" Color="{StaticResource DigitsHover}" />

    <Color x:Key="OperationsDark">#141414</Color>
    <SolidColorBrush x:Key="OperationsDarkBrush" Color="{StaticResource OperationsDark}" />
    
    <Color x:Key="ForegroundLight">#ffffff</Color>
    <SolidColorBrush x:Key="ForegroundLightBrush" Color="{StaticResource ForegroundLight}" />

    <Color x:Key="EqualsLight">#134369</Color>
    <SolidColorBrush x:Key="EqualsLightBrush" Color="{StaticResource EqualsLight}" />

    <Color x:Key="EqualsHover">#036fc4</Color>
    <SolidColorBrush x:Key="EqualsHoverBrush" Color="{StaticResource EqualsHover}" />

    <Color x:Key="WindowButtonHover">#393939</Color>
    <SolidColorBrush x:Key="WindowButtonHoverBrush" Color="{StaticResource WindowButtonHover}" />

    <Color x:Key="CloseHover">#ff0000</Color>
    <SolidColorBrush x:Key="CloseHoverBrush" Color="{StaticResource CloseHover}" />

    <!--#endregion-->
    
    <!--#region Buttons -->
    
    <!-- Digit Button -->
    <Style x:Key="DigitKey" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource DigitsDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Padding" Value="15 8" />
        <Setter Property="Margin" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DigitsHover}" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DigitsDark}" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Equal Button -->
    <Style x:Key="EqualButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource EqualsLightBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="Padding" Value="15 8" />
        <Setter Property="Margin" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource EqualsHover}" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource EqualsLight}" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Operation Button -->
    <Style x:Key="OperationKey" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource OperationsDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Padding" Value="15 8" />
        <Setter Property="Margin" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DigitsHover}" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource OperationsDark}" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Window buttons -->
    <Style x:Key="WindowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="Padding" Value="4 10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Width="50"
                            Height="35"
                            x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WindowButtonHover}" 
                                                    Duration="0:0:0.15" Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundDark}" 
                                                    Duration="0:0:0.15" Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Close Button -->
    <Style x:Key="WindowButtonClose" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="Padding" Value="4 10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Width="50"
                            Height="35"
                            x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource CloseHover}" 
                                                    Duration="0:0:0.15" Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundDark}" 
                                                    Duration="0:0:0.15" Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#region TextBlocks-->

    <Style TargetType="{x:Type TextBlock}" x:Key="HeaderText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="10 6" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="CalculatorText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeCalculator}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="10 6" />
    </Style>
    
    <!--#endregion-->
    
</ResourceDictionary>